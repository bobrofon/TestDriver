cmake_minimum_required(VERSION 3.5)

project(TestDriver C)

enable_testing()

find_library(MATH_LIBRARY m)

function(SET_COMPILER_SETTINGS target)
	cmake_parse_arguments(
		SET_COMPILER_SETTINGS
		""
		"EXTENSIONS"
		""
		${ARGN}
	)

	set_target_properties(${target} PROPERTIES
		C_STANDARD 11
		C_STANDARD_REQUIRED YES
		C_EXTENSIONS ${SET_COMPILER_SETTINGS_EXTENSIONS}
	)

	target_compile_options(${target} PRIVATE
		$<$<OR:$<CXX_COMPILER_ID:Clang>,$<CXX_COMPILER_ID:AppleClang>,$<CXX_COMPILER_ID:GNU>>:
		-Wall
		-pedantic
		>
		$<$<CXX_COMPILER_ID:MSVC>:
		/W4 # при сборке msbuild этот флаг игнорируется в пользу /W3. Флаг оставлен для сборок основанных на make
		>)

	if(MATH_LIBRARY)
		target_link_libraries(${target} PUBLIC ${MATH_LIBRARY})
	endif()
endfunction()

add_library(testDriver testDriver.c)
set_compiler_settings(testDriver EXTENSIONS YES) # EXTENSIONS YES заменяет std=c11 на std=gnu11, что выставляет POSIX макросы

set(TEST_LAB_SOURCES
	testLab0.c
	testLab10.c
	testLab11.c
	testLab2.c
	testLab30.c
	testLab4.c
	testLab5.c
	testLab6.c
	testLab7.c
	testLab80.c
	testLab9.c
)
foreach(source ${TEST_LAB_SOURCES})
	get_filename_component(target ${source} NAME_WE)
	add_executable(${target} ${source})
	set_compiler_settings(${target} EXTENSIONS NO)
	target_link_libraries(${target} PRIVATE testDriver)

	string(REPLACE "testLab" "lab" test ${target})
	add_test(NAME ${test}
		COMMAND "${CMAKE_CURRENT_BINARY_DIR}/${target}" "${CMAKE_CURRENT_SOURCE_DIR}/${test}")
endforeach()
